{"version":3,"sources":["scripts/main.js"],"names":["tableData","document","querySelector","tableBody","compareCellText","i","a","b","cells","textContent","localeCompare","compareCellNumber","replace","sortPeople","targetName","sortedRows","rows","sort","tBodies","append","clickHandler","e","target","toLowerCase","addEventListener"],"mappings":";AAAA,aAgDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9CA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SAEnCE,EAAkB,SAACC,GAChB,OAAA,SAACC,EAAGC,GACFD,OAAAA,EAAEE,MAAMH,GAAGI,YAAYC,cAAcH,EAAEC,MAAMH,GAAGI,eAIrDE,EAAoB,SAACN,GAClB,OAAA,SAACC,EAAGC,GACF,OAACD,EAAEE,MAAMH,GAAGI,YAAYG,QAAQ,QAAS,KAC7CL,EAAEC,MAAMH,GAAGI,YAAYG,QAAQ,QAAS,MAIzCC,EAAa,SAACC,GACdA,GAAe,SAAfA,EAAuB,CAAA,IAAA,EACnBC,EAAa,EAAIZ,EAAUa,MAAMC,KAAKb,EAAgB,KAE5DJ,EAAAA,EAAUkB,QAAQ,IAAGC,OAAUJ,MAAAA,EAAAA,EAAAA,IAG7BD,GAAe,aAAfA,EAA2B,CAAA,IAAA,EACvBC,EAAa,EAAIZ,EAAUa,MAAMC,KAAKb,EAAgB,KAE5DJ,EAAAA,EAAUkB,QAAQ,IAAGC,OAAUJ,MAAAA,EAAAA,EAAAA,IAG7BD,GAAe,QAAfA,EAAsB,CAAA,IAAA,EAClBC,EAAa,EAAIZ,EAAUa,MAAMC,KAAKN,EAAkB,KAE9DX,EAAAA,EAAUkB,QAAQ,IAAGC,OAAUJ,MAAAA,EAAAA,EAAAA,IAG7BD,GAAe,WAAfA,EAAyB,CAAA,IAAA,EACrBC,EAAa,EAAIZ,EAAUa,MAAMC,KAAKN,EAAkB,KAE9DX,EAAAA,EAAUkB,QAAQ,IAAGC,OAAUJ,MAAAA,EAAAA,EAAAA,MAI7BK,EAAe,SAACC,GACpBR,EAAWQ,EAAEC,OAAOb,YAAYc,gBAGlCvB,EAAUwB,iBAAiB,QAASJ","file":"main.c0c27a92.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableData = document.querySelector('table');\nconst tableBody = document.querySelector('tbody');\n\nconst compareCellText = (i) => {\n  return (a, b) => {\n    return a.cells[i].textContent.localeCompare(b.cells[i].textContent);\n  };\n};\n\nconst compareCellNumber = (i) => {\n  return (a, b) => {\n    return +a.cells[i].textContent.replace(/[$,]/g, '')\n    - +b.cells[i].textContent.replace(/[$,]/g, '');\n  };\n};\n\nconst sortPeople = (targetName) => {\n  if (targetName === 'name') {\n    const sortedRows = [...tableBody.rows].sort(compareCellText(0));\n\n    tableData.tBodies[0].append(...sortedRows);\n  };\n\n  if (targetName === 'position') {\n    const sortedRows = [...tableBody.rows].sort(compareCellText(1));\n\n    tableData.tBodies[0].append(...sortedRows);\n  };\n\n  if (targetName === 'age') {\n    const sortedRows = [...tableBody.rows].sort(compareCellNumber(2));\n\n    tableData.tBodies[0].append(...sortedRows);\n  };\n\n  if (targetName === 'salary') {\n    const sortedRows = [...tableBody.rows].sort(compareCellNumber(3));\n\n    tableData.tBodies[0].append(...sortedRows);\n  };\n};\n\nconst clickHandler = (e) => {\n  sortPeople(e.target.textContent.toLowerCase());\n};\n\ntableData.addEventListener('click', clickHandler);\n"]}